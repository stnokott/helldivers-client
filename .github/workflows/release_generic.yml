name: Generic Release

on:
  workflow_call:
    inputs:
      snapshot:
        required: false
        type: boolean
        default: false
      publish_snapshot_docker:
        required: false
        type: boolean
        default: false

env:
  SNAPSHOT_DOCKER_NAME: ghcr.io/${{ github.actor }}/${{ github.repository }}:latest-snapshot

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.4
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v5.0.1
        with:
          go-version-file: "go.mod"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: goreleaser/goreleaser-action@v5.0.0
        with:
          distribution: goreleaser
          version: v1.25.1
          args: |
            release --config=build/.goreleaser.yaml --clean \
            ${{ inputs.snapshot == true && '--snapshot --skip=docker' || ''}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: release-binary
          path: |
            dist/*.zip
            dist/*.tar.gz
          retention-days: 2

  push_snapshot:
    if: inputs.publish_snapshot_docker == true
    needs: goreleaser
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows]
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v4.1.7
        with:
          name: release-binary
          pattern: "*.${{ matrix.os == 'windows' && 'zip' || 'tar.gz' }}"
      - name: extract
        run: |
          ${{
            matrix.os == 'windows'
            && 'unzip *_${{ matrix.os }}_*.zip'
            || 'tar -xf *_${{ matrix.os }}_*.tar.gz'
           }}
      - if: matrix.os == 'windows'
        name: rename binary
        run: mv app.exe app
      - name: Build and push snapshot Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.SNAPSHOT_DOCKER_NAME }}
          platforms: ${{ matrix.os }}/amd64
