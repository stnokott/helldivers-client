# yaml-language-server: $schema=https://goreleaser.com/static/schema.json

project_name: helldivers-client

before:
  hooks:
    - go mod tidy
    - go mod vendor
    - go mod verify

builds:
  - &default_build
    id: linux
    binary: app
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64
    ldflags:
      - -s -w # -s and -w reduce binary size, but prevent debugging (not necessary for production build)
      - -X main.projectName={{ .ProjectName }}
      - -X main.version={{ .Version  }}
      - -X main.commit={{ .ShortCommit }}
      - -X main.buildDate={{ .Date }}
    flags:
      - >-
        {{- if .IsSnapshot -}}
          -pgo=off
        {{- else -}}
          -pgo=build/default.pprof
        {{- end -}}
  - <<: *default_build
    id: windows
    goos:
      - windows

dockers:
  - &default_docker
    skip_push: "{{ .IsSnapshot }}"
    use: buildx
    image_templates:
      - "ghcr.io/stnokott/{{ .ProjectName }}:{{ .Version }}-amd64"
      - "ghcr.io/stnokott/{{ .ProjectName }}:latest-amd64"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--platform=linux/amd64"
    dockerfile: Dockerfile
    extra_files:
      - "scripts/migrations"
  - <<: *default_docker
    skip_push: "{{ not .IsSnapshot }}"
    image_templates:
      - "ghcr.io/stnokott/{{ .ProjectName }}:latest-snapshot"

docker_manifests:
  - skip_push: "{{ .IsSnapshot }}"
    name_template: "ghcr.io/stnokott/{{ .ProjectName }}:{{ .Version }}"
    image_templates:
      - "ghcr.io/stnokott/{{ .ProjectName }}:{{ .Version }}-amd64"
      - "ghcr.io/stnokott/{{ .ProjectName }}:latest-amd64"
  - skip_push: "{{ not .IsSnapshot }}"
    name_template: "ghcr.io/stnokott/{{ .ProjectName }}:latest-snapshot"
    image_templates:
      - "ghcr.io/stnokott/{{ .ProjectName }}:latest-snapshot"

changelog:
  disable: "{{ .IsSnapshot }}"
  sort: asc
  abbrev: -1
  use: github
  filters:
    exclude:
      - "^style"
      - "^test"
      - "^chore"
      - "\\(dev\\)"
      - "^Merge"

  groups:
    - title: Features
      regexp: "^feat"
      order: 0
    - title: Bug Fixes
      regexp: "^fix"
      order: 1
    - title: Documentation
      regexp: "^docs"
      order: 4
    - title: Refactor
      regexp: "^refactor"
      order: 3
    - title: Performance
      regexp: "^perf"
      order: 2
    - title: Build
      regexp: "^build"
      order: 5
    - title: Pipeline
      regexp: "^ci"
      order: 6
    - title: Others
      order: 999

archives:
  - id: linux
    builds:
      - linux
    format: tar.gz
  - id: windows
    builds:
      - windows
    format: zip

release:
  disable: "{{ .IsSnapshot }}" # don't release when we're publishing a snapshot
  target_commitish: "{{ .FullCommit }}"
  github:
    owner: stnokott
    name: "{{ .ProjectName }}"
  name_template: "v{{ .Version }}"
